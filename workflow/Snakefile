#
#
# Genomes in /data/johlee/cross_mammal_xci/genomes
# Data in /data/johlee/cross_mammal_xci/temp/sra
#
#
#

import os
import sys
import logging

gitpath=os.path.expanduser("~/git/xskew")
sys.path.append(gitpath)

species='Homo_sapiens'
datadir = os.path.expanduser(f'~/data/cross_mammal_xci/temp/sra/{species}')
homedir = os.path.expanduser("~/")
wdir = f"{homedir}work/xskew1"
chr="X"

from xskew.tools import *
setup_logging(logging.DEBUG)

logging.debug('in snakefile...')

(SAMPLE,) = glob_wildcards(datadir + "/{sample}.sra")

logging.debug(f"HOME={homedir} WORKDIR={wdir} CHR={chr}")
logging.debug(f"SAMPLE={SAMPLE}")


rule all:
    input:
        # testing. 
        end1 = expand(wdir +  "/{sample}_1.fastq", sample=SAMPLE ),
        end2 = expand(wdir +  "/{sample}_2.fastq", sample=SAMPLE ),
        
        # from STAR
        abam = expand(wdir + "/{sample}.Aligned.out.bam", sample=SAMPLE ),
        
        # from SAMTOOLS 
        sbam = expand(wdir + "/{sample}.Aligned.sortedByCoord.out.bam", sample=SAMPLE ),
        xbam = expand(wdir + "/{sample}.X.bam", sample=SAMPLE ),
        xfiltbam = expand(wdir + "/{sample}.X.filt.bam", sample=SAMPLE ),
        
        # from STAR wasp
        wlog = expand(wdir + "/{sample}.Log.wasp.out", sample=SAMPLE ),        
        wflog= expand(wdir +"/{sample}.Log.final.wasp.out", sample=SAMPLE),
        wrpg=  expand(wdir +"/{sample}.ReadsPerGene.out.wasp.tab",    sample=SAMPLE),        
        wabam= expand(wdir + "/{sample}.Aligned.out.wasp.bam",  sample=SAMPLE), 

        # from gatk
        rgbam = expand(wdir + "/{sample}." + chr + ".rg.bam", sample=SAMPLE),
        sfbam = expand(wdir + "/{sample}." + chr + ".split.filtered.bam", sample=SAMPLE),
        xfvcf = expand(wdir + "/{sample}." + chr + ".filtered.vcf", sample=SAMPLE),
        sfvcf = expand(wdir + "/{sample}." + chr + ".snps_filtered.vcf",  sample=SAMPLE ),
        
        # from igvtools
        #wwig =   expand(wdir + "/{sample}." + chr + ".split.filtered.wasp.wig", sample=SAMPLE )

rule dump_fastq:
    input:
        sra = datadir + "/{sample}.sra"
    output:
        end1= wdir + "/{sample}_1.fastq",    
        end2= wdir + "/{sample}_2.fastq"    
    resources:
        mem_mb=2048
    threads: 6

    run:
        fasterq_dump( infile=input.sra, 
                      outdir=wdir, 
                      nthreads=f"{threads}", 
                      tempdir ="./")
        
        
rule star_nowasp:
    input:
        end1= wdir + "/{sample}_1.fastq",   
        end2= wdir + "/{sample}_2.fastq"
    output:     
        abam= wdir + "/{sample}.Aligned.out.bam",
        rpg= wdir + "/{sample}.ReadsPerGene.out.tab",
        sjtab= wdir + "/{sample}.SJ.out.tab",
        log= wdir + "/{sample}.Log.out",        
        plog= wdir + "/{sample}.Log.progress.out",
        flog= wdir + "/{sample}.Log.final.out",
    params:        
        tmpdir = wdir + "/{sample}_starout",
        wdir = wdir + "/",
        gdir= homedir + "data/genomes/GRCh38_Gencode25.2.4.9a/",
        outprefix = wdir + "/{sample}."     
    resources:
        mem_mb=3072
    threads: 16
    
    run:
        star_nowasp( end1=input.end1, 
                     end2=input.end2, 
                     outprefix=params.outprefix,
                     nthreads=f"{threads}", 
                     genomedir=params.gdir)

rule samtools1: 
    input:
        abam = wdir + "/{sample}.Aligned.out.bam"    
    output:
        sbam = wdir + "/{sample}.Aligned.sortedByCoord.out.bam",
        sbai = wdir + "/{sample}.Aligned.sortedByCoord.out.bam.bai"
    resources:
        mem_mb=3072
    threads: 20
    
    run:
        samtools_sort(infile=input.abam, 
                      outfile=output.sbam, 
                      memory=resources.mem_mb, 
                      nthreads=f"{threads}")
        samtools_index(infile=output.sbam, 
                       nthreads=f"{threads}")


rule samtools2:
    input:
        bam= wdir + "/{sample}.Aligned.sortedByCoord.out.bam",
        sbai = wdir + "/{sample}.Aligned.sortedByCoord.out.bam.bai"    
    output:
        xbam= wdir + "/{sample}."+ chr +".bam",    
        xfiltbam= wdir + "/{sample}."+ chr +".filt.bam"    
    params:
        region=f"chr{chr}",
        qual = 10,
    resources:
        mem_mb=3072  
    threads: 1        

    run:
        samtools_view_region(infile=input.bam, 
                             outfile=output.xbam, 
                             region=params.region)
        samtools_view_quality(infile=output.xbam, 
                              outfile=output.xfiltbam, 
                              quality=f'{params.qual}')


rule gatk1:        
    input:
        xbam= wdir + "/{sample}."+ chr +".bam",    
        xfiltbam= wdir + "/{sample}."+ chr +".filt.bam",
    output:
        sfbam = wdir + "/{sample}." + chr + ".split.filtered.bam",
        svcf = wdir + "/{sample}." + chr + ".snps.vcf",
        sfvcf = wdir + "/{sample}." + chr + ".snps_filtered.vcf",
        xfvcf = wdir + "/{sample}." + chr + ".filtered.vcf",
        rgbam = wdir + "/{sample}." + chr + ".rg.bam",
        ddbam = wdir + "/{sample}." + chr + ".dedupped.bam",
        metrics = wdir + "/{sample}." + chr + ".output.metrics",
    params:
        chrom = chr,
        wdir = wdir + "/",
        genome = homedir + "data/genomes/GRCh38_Gencode25.2.4.9a/GRCh38.p7.genome.fa",
        interval = f"chr{chr}"    
    resources:
        #mem_mb=46080
        mem_mb= 5760
    #threads: 1
    threads: 8
    
    run:
        gatk_arrg( infile=input.xfiltbam, outfile=output.rgbam)
        gatk_md( infile=output.rgbam, outfile=output.ddbam, metrics=output.metrics)
        gatk_sncr( infile=output.ddbam, outfile=output.sfbam, genome=params.genome )
        gatk_htc( infile=output.sfbam, outfile=output.xfvcf, genome=params.genome, interval=params.interval)
        gatk_sv(infile=output.xfvcf, outfile=output.svcf, genome=params.genome, interval=params.interval )
        gatk_vf(infile=output.svcf, outfile=output.sfvcf, genome=params.genome, interval=params.interval )      


rule star_wasp:
    input:
        end1= wdir + "/{sample}_1.fastq",   
        end2= wdir + "/{sample}_2.fastq",
        sfvcf = wdir + "/{sample}." + chr + ".snps_filtered.vcf",
    output:     
        wabam= wdir + "/{sample}.Aligned.out.wasp.bam",
        wrpg= wdir + "/{sample}.ReadsPerGene.out.wasp.tab",
        wsjtab= wdir + "/{sample}.SJ.out.wasp.tab",
        wlog= wdir + "/{sample}.Log.wasp.out",        
        wplog= wdir + "/{sample}.Log.progress.wasp.out",
        wflog= wdir + "/{sample}.Log.final.wasp.out",
    params:        
        tmpdir = wdir + "/{sample}_starout",
        wdir = wdir + "/",
        gdir= homedir + "data/genomes/GRCh38_Gencode25.2.4.9a/",
        outprefix = wdir + "/{sample}."
    resources:
        mem_mb=3072
    threads: 16
    
    run:
        star_wasp( end1=input.end1, 
                     end2=input.end2,
                     vcf=input.sfvcf, 
                     outprefix=params.outprefix,
                     nthreads=f"{threads}", 
                     genomedir=params.gdir)


rule samtools3: 
    input:         
        wabam = wdir + "/{sample}.Aligned.out.wasp.bam"    
    output:        
        wsbam = wdir + "/{sample}.Aligned.sortedByCoord.out.wasp.bam"
    resources:
        mem_mb=3072
    threads: 20
    run:
        samtools_sort(infile=input.wabam, 
                      outfile=output.wsbam, 
                      memory=resources.mem_mb, 
                      nthreads=f"{threads}")
        samtools_index(infile=output.wsbam, 
                       nthreads=f"{threads}")
        
rule samtools4:
    input:
        wbam= wdir + "/{sample}.Aligned.sortedByCoord.out.wasp.bam",
        wsbai = wdir + "/{sample}.Aligned.sortedByCoord.out.bam.wasp.bai"    
    output:
        wxbam= wdir + "/{sample}."+ chr +".wasp.bam",    
        wxfiltbam= wdir + "/{sample}."+ chr +".wasp.filt.bam"    
    params:
        region=f"chr{chr}",
        qual = 10,
        tag = 'vW:1'
    resources:
        mem_mb=3072  
    threads: 1        

    run:
        samtools_view_region(infile=input.wbam, 
                             outfile=output.wxbam, 
                             region=params.region)
        samtools_view_quality(infile=output.wxbam, 
                              outfile=output.wxfiltbam,
                              tag=params.tag, 
                              quality=f'{params.qual}')
     
rule gatk2:        
    input:
        wxbam= wdir + "/{sample}."+ chr +".wasp.bam",    
        wxfiltbam= wdir + "/{sample}."+ chr +".wasp.filt.bam",
    output:
        wsfbam = wdir + "/{sample}." + chr + ".wasp.split.filtered.bam",
        wsvcf = wdir + "/{sample}." + chr + ".wasp.snps.vcf",
        wsfvcf = wdir + "/{sample}." + chr + ".wasp.snps_filtered.vcf",
        wxfvcf = wdir + "/{sample}." + chr + ".wasp.filtered.vcf",
        wrgbam = wdir + "/{sample}." + chr + ".wasp.rg.bam",
        wddbam = wdir + "/{sample}." + chr + ".wasp.dedupped.bam",
        wmetrics = wdir + "/{sample}." + chr + ".wasp.output.metrics",
    
    params:
        chrom = chr,
        wdir = wdir + "/",
        genome = homedir + "data/genomes/GRCh38_Gencode25.2.4.9a/GRCh38.p7.genome.fa",
        interval = f"chr{chr}"    
    resources:
        #mem_mb=46080
        mem_mb= 5760
    #threads: 1
    threads: 8
    
    run:
        gatk_arrg( infile=input.wxfiltbam, outfile=output.wrgbam)
        gatk_md( infile=output.wrgbam, outfile=output.wddbam, metrics=output.wmetrics)
        gatk_sncr( infile=output.wddbam, outfile=output.wsfbam, genome=params.genome )
        gatk_htc( infile=output.wsfbam, outfile=output.wxfvcf, genome=params.genome, interval=params.interval)
        gatk_sv(infile=output.wxfvcf, outfile=output.wsvcf, genome=params.genome, interval=params.interval )
        gatk_vf(infile=output.wsvcf, outfile=output.wsfvcf, genome=params.genome, interval=params.interval )      

rule igvtools7:    
    input:
        wsfbam= wdir + "/{sample}." + chr + ".split.filtered.wasp.bam",

    output:
        wwig= wdir + "/{sample}." + chr + ".split.filtered.wasp.wig", 
        
    resources:
        mem_mb=12288
    threads: 1
    
    params:
        wdir = wdir + "/",
        chrom=chr,      
      
    run:
        igvtools_count(input.wsfbam, output.wwig)      
      
      
      
      
        